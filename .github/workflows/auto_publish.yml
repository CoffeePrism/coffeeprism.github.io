name: 自动文章生成与发布

on:
  schedule:
    # 每天凌晨2点（UTC时间，根据需要调整）
    - cron: '0 18 * * *'
  workflow_dispatch:  # 允许手动触发

jobs:
  generate-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 设置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: 安装Python依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 设置Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: 配置Git
        run: |
          git config --global user.name "自动发布机器人"
          git config --global user.email "autobot@coffeeprism.com"

      - name: 创建备份目录
        run: |
          mkdir -p backups/$(date +%Y%m%d)
          cp -r content backups/$(date +%Y%m%d)/ || echo "没有content目录可备份"

      - name: 生成文章
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
        run: python scripts/generate_and_publish.py

      - name: 构建网站
        run: hugo --minify

      - name: 提交并推送到main分支
        run: |
          # 添加内容目录的更改
          git add content
          
          # 强制添加public目录（被.gitignore忽略）
          git add -f public
          
          # 检查是否有更改需要提交
          if [[ -z $(git status -s) ]]; then
            echo "没有需要提交的更改"
            exit 0
          fi
          
          git commit -m "自动发布: 添加新文章 - $(date +%Y-%m-%d)"
          git push origin main

      - name: 部署到gh-pages分支
        run: |
          echo "正在部署到gh-pages分支..."
          
          # 获取当前提交的SHA
          COMMIT_SHA=$(git rev-parse HEAD)
          COMMIT_MESSAGE="从提交 ${COMMIT_SHA} 部署网站"
          
          # 创建并切换到gh-pages分支的临时分支
          git checkout -b gh-pages-temp
          
          # 强制添加public目录所有内容
          git add -f public/
          
          # 移动public目录内容到根目录
          mkdir -p ../temp-public
          cp -r public/* ../temp-public
          git rm -rf .
          cp -r ../temp-public/* .
          rm -rf ../temp-public
          
          # 添加所有文件
          git add .
          
          # 提交更改
          git commit -m "${COMMIT_MESSAGE}"
          
          # 强制推送到gh-pages分支
          git push -f origin gh-pages-temp:gh-pages
          
          # 切回main分支
          git checkout main 