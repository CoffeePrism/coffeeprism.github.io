name: 自动文章生成与发布

on:
  push:
    branches:
      - main
  schedule:
    # 每天凌晨2点（UTC时间，根据需要调整）
    - cron: '0 18 * * *'
  workflow_dispatch:  # 允许手动触发

# 设置权限
permissions:
  contents: write
  pages: write
  id-token: write

# 允许一个并发部署
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 生成文章并构建页面
  generate-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: 设置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          # cache: 'pip' # Temporarily disable cache for debugging
          cache-dependency-path: 'requirements.txt'
          
      # ---> NEW: Clear pip cache <---
      - name: 清除pip缓存
        run: pip cache purge

      - name: 安装Python依赖
        run: |
          set -e # Exit immediately if a command exits with a non-zero status.
          python -m pip install --upgrade pip
          pip install -v -r requirements.txt # Add -v for verbose output

      - name: 设置Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      # ---> 新增：设置 Node.js 环境
      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 使用一个 LTS 版本

      # ---> 新增：安装 Dart Sass
      - name: 安装 Dart Sass
        run: npm install -g sass

      # ---> 新增：验证 Sass 安装和 PATH
      - name: 验证 Sass 和 PATH
        run: |
          echo "--- Checking Sass --- "
          which sass
          sass --version
          echo "--- Checking PATH ---"
          echo $PATH

      - name: 配置Git
        run: |
          git config --global user.name "自动发布机器人"
          git config --global user.email "autobot@coffeeprism.com"

      - name: 创建备份目录
        run: |
          mkdir -p backups/$(date +%Y%m%d)
          cp -r content backups/$(date +%Y%m%d)/ || echo "没有content目录可备份"

      - name: 生成文章
        env:
          NVIDIA_API_KEY: ${{ secrets.NVIDIA_API_KEY }}
          NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
          # 可选：传递站点信息给脚本 (NVIDIA API 不需要)
          # YOUR_SITE_URL: 'https://www.coffeeprism.com'
          # YOUR_SITE_NAME: 'Coffee Prism'
        run: python scripts/generate_and_publish.py

      - name: 构建网站
        run: hugo --logLevel debug --themesDir ./themes

      # ---> 新增：列出构建输出
      - name: 列出 public 目录内容
        run: ls -lR public

      - name: 提交并推送到main分支
        run: |
          # 添加内容目录的更改
          git add content
          
          # 强制添加public目录（被.gitignore忽略）
          git add -f public
          
          # 检查是否有更改需要提交
          if [[ -z $(git status -s) ]]; then
            echo "没有需要提交的更改"
            exit 0
          fi
          
          git commit -m "自动发布: 添加新文章 - $(date +%Y-%m-%d)"
          git push origin main

      - name: 上传页面工件
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # 部署到GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: generate-and-build
    steps:
      - name: 部署到GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 